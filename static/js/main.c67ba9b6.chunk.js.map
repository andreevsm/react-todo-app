{"version":3,"sources":["components/Header/index.js","HOC/withData.js","components/Item/index.js","components/ItemList/index.js","redux/data/todoList.js","containers/blocks/TodoList/index.js","containers/blocks/SearchPanel/index.js","containers/blocks/TodoStatusFilter/index.js","containers/forms/TodoAddForm/index.js","containers/layouts/App/index.js","redux/data/index.js","redux/index.js","store/index.js","index.js"],"names":["Header","_ref","toDo","done","react_default","a","createElement","className","withData","View","_Component","_class","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","apply","arguments","inherits","createClass","key","value","props","Component","Item","label","onDeleted","onToggleDone","onToggleImportant","important","classNames","Fragment","onClick","onKeyPress","type","ItemList","items","onDeleteTodoAction","onToggleImportantTodo","onToggleDoneAction","map","item","id","itemProps","objectWithoutProperties","components_Item","assign","initialState","uid","addTodo","createAction","deleteTodo","toggleImportantTodo","toggleDoneTodo","data_todoList","handleActions","_handleActions","defineProperty","state","action","concat","toConsumableArray","payload","filter","todo","idx","findIndex","el","oldItem","newItem","objectSpread","slice","TodoList","compose","setDisplayName","pure","connect","todoList","data","SearchPanel","onSearchTodos","placeholder","aria-label","onChange","e","target","BUTTONS","name","ItemStatusFilter","onFilterChange","buttons","_ref2","ButtonClassNames","withState","withHandlers","onSubmit","onCreateTodo","setLabel","event","preventDefault","onAddTodoAction","text","array","length","toLowerCase","indexOf","onFilter","setText","setFilter","doneCount","todoCount","visibleTodos","components_Header","blocks_SearchPanel","TodoStatusFilter","blocks_TodoList","forms_TodoAddForm","combineReducers","rootReducer","persistConfig","storage","stateReconciler","autoMergeLevel2","blacklist","pReducer","persistReducer","store","createStore","applyMiddleware","thunk","persistor","persistStore","ReactDOM","render","es","integration_react","loading","layouts_App","document","getElementById"],"mappings":"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","file":"static/js/main.c67ba9b6.chunk.js","sourcesContent":["import React from 'react';\nimport PropTypes from 'prop-types';\n\nimport './styles.css';\n\nconst Header = ({\n  toDo,\n  done,\n}) => (\n  <div className=\"header\">\n    <h1 className=\"header__title\">My Todo list</h1>\n    <div className=\"header__todo-info\">\n      <div className=\"todo-info__count\">\n        To do\n        <span className=\"count\">{toDo}</span>\n      </div>\n      <div className=\"todo-info__count\">\n        Done\n        <span className=\"count\">{done}</span>\n      </div>\n    </div>\n  </div>\n);\n\nHeader.propTypes = {\n  toDo: PropTypes.number.isRequired,\n  done: PropTypes.number.isRequired,\n};\n\nexport default Header;\n","import React, { Component } from 'react';\n\nconst withData = View => class extends Component {\n  render() {\n    return <View {...this.props} />;\n  }\n};\n\nexport default withData;\n","import React from 'react';\nimport PropTypes from 'prop-types';\n\nimport './styles.css';\n\nconst Item = ({\n  label,\n  onDeleted,\n  onToggleDone,\n  onToggleImportant,\n  important,\n  done,\n}) => {\n  let classNames = 'todo-list-item';\n\n  if (done) {\n    classNames += ' done';\n  }\n\n  if (important) {\n    classNames += ' important';\n  }\n\n  return (\n    <React.Fragment>\n      <div className={classNames} onClick={onToggleDone} onKeyPress={onToggleDone}>\n        {label}\n      </div>\n      <div className=\"buttons-block\">\n        <button onClick={onDeleted} type=\"button\" className=\"btn btn-outline-danger buttons-block-btn\">\n          <i className=\"fa fa-trash\" />\n        </button>\n        <button onClick={onToggleImportant} type=\"button\" className=\"btn btn-outline-success\">\n          <i className=\"fa fa-exclamation\" />\n        </button>\n      </div>\n    </React.Fragment>\n  );\n};\n\nItem.propTypes = {\n  label: PropTypes.string.isRequired,\n  onDeleted: PropTypes.func.isRequired,\n  onToggleDone: PropTypes.func.isRequired,\n  onToggleImportant: PropTypes.func.isRequired,\n  important: PropTypes.bool.isRequired,\n  done: PropTypes.bool.isRequired,\n};\n\nexport default Item;\n","import React from 'react';\nimport PropTypes from 'prop-types';\n\nimport Item from '../Item';\n\nconst ItemList = ({\n  items,\n  onDeleteTodoAction,\n  onToggleImportantTodo,\n  onToggleDoneAction,\n}) => (\n  <ul className=\"list-group todo-list\">\n    {items.map((item) => {\n      const { id, ...itemProps } = item;\n      return (\n        <li key={id} className=\"list-group-item list-group-item-action d-flex justify-content-between align-items-center\">\n          <Item\n            onDeleted={() => onDeleteTodoAction(id)}\n            onToggleDone={() => onToggleDoneAction(id)}\n            onToggleImportant={() => onToggleImportantTodo(id)}\n            {...itemProps}\n          />\n        </li>\n      );\n    })}\n  </ul>\n);\n\nItemList.propTypes = {\n  items: PropTypes.arrayOf(PropTypes.object).isRequired,\n  onDeleteTodoAction: PropTypes.func.isRequired,\n  onToggleImportantTodo: PropTypes.func.isRequired,\n  onToggleDoneAction: PropTypes.func.isRequired,\n};\n\nexport default ItemList;\n","import { handleActions, createAction } from 'redux-actions';\nimport uid from 'uid';\n\nconst initialState = [\n  {\n    id: uid(),\n    label: 'Learn React',\n    important: false,\n    done: false,\n  },\n  {\n    id: uid(),\n    label: 'Build an Awesome App',\n    important: true,\n    done: true,\n  },\n  {\n    id: uid(),\n    label: 'Clean up room',\n    important: true,\n    done: false,\n  },\n  {\n    id: uid(),\n    label: 'Fix bugs',\n    done: false,\n    important: false,\n  },\n];\n\nexport const addTodo = createAction('todoList/ADD_TODO');\nexport const deleteTodo = createAction('todoList/REMOVE_TODO');\nexport const toggleImportantTodo = createAction('todoList/TOGGLE_IMPORTANT_TODO');\nexport const toggleDoneTodo = createAction('todoList/TOGGLE_DONE_TODO');\n\nexport default handleActions({\n  [addTodo]: (state, action) => [\n    ...state,\n    {\n      id: uid(),\n      label: action.payload,\n      done: false,\n      important: false,\n    },\n  ],\n  [deleteTodo]: (state, action) => state.filter(todo => todo.id !== action.payload),\n  [toggleImportantTodo]: (state, action) => {\n    const idx = state.findIndex(el => el.id === action.payload);\n    const oldItem = state[idx];\n    const newItem = {\n      ...oldItem,\n      important: !oldItem.important,\n    };\n\n    return [\n      ...state.slice(0, idx),\n      newItem,\n      ...state.slice(idx + 1),\n    ];\n  },\n  [toggleDoneTodo]: (state, action) => {\n    const idx = state.findIndex(el => el.id === action.payload);\n    const oldItem = state[idx];\n    const newItem = {\n      ...oldItem,\n      done: !oldItem.done,\n    };\n\n    return [\n      ...state.slice(0, idx),\n      newItem,\n      ...state.slice(idx + 1),\n    ];\n  },\n}, initialState);\n","import { connect } from 'react-redux';\nimport { compose, pure, setDisplayName } from 'recompose';\n\nimport { withData } from 'HOC';\n\nimport ItemList from 'components/ItemList';\n\nimport {\n  deleteTodo,\n  toggleImportantTodo,\n  toggleDoneTodo,\n} from 'redux/data/todoList';\n\nconst TodoList = withData(ItemList);\n\nexport default compose(\n  setDisplayName('TodoList'),\n  pure,\n  connect(\n    ({ data: { todoList } }) => ({ todoList }),\n    {\n      onDeleteTodoAction: id => deleteTodo(id),\n      onToggleImportantTodo: id => toggleImportantTodo(id),\n      onToggleDoneAction: id => toggleDoneTodo(id),\n    },\n  ),\n)(TodoList);\n","import React from 'react';\nimport PropTypes from 'prop-types';\n\nconst SearchPanel = ({\n  onSearchTodos,\n}) => (\n  <div className=\"input-group\">\n    <div className=\"input-group-prepend\">\n      <span className=\"input-group-text\">\n        <i className=\"fa fa-search\" />\n      </span>\n    </div>\n    <input\n      type=\"text\"\n      className=\"form-control\"\n      placeholder=\"search\"\n      aria-label=\"search\"\n      onChange={e => onSearchTodos(e.target.value)}\n    />\n  </div>\n);\n\nSearchPanel.propTypes = {\n  onSearchTodos: PropTypes.func.isRequired,\n};\n\nexport default SearchPanel;\n","import React from 'react';\nimport PropTypes from 'prop-types';\n\nconst BUTTONS = [\n  { id: 1, name: 'active', label: 'Active' },\n  { id: 2, name: 'done', label: 'Done' },\n  { id: 3, name: 'all', label: 'All' },\n];\n\nconst ItemStatusFilter = ({\n  filter,\n  onFilterChange,\n}) => {\n  const buttons = BUTTONS.map(({ id, name, label }) => {\n    const isActive = filter === name;\n    const ButtonClassNames = isActive ? 'btn-info' : 'btn-outline-secondary';\n    return (\n      <button key={id} name={name} type=\"button\" onClick={() => onFilterChange(name)} className={`btn ${ButtonClassNames}`}>\n        {label}\n      </button>\n    );\n  });\n\n  return (\n    <div className=\"btn-group\">\n      {buttons}\n    </div>\n  );\n};\n\nItemStatusFilter.propTypes = {\n  filter: PropTypes.string.isRequired,\n  onFilterChange: PropTypes.func.isRequired,\n};\n\nexport default ItemStatusFilter;\n","import React from 'react';\nimport {\n  compose,\n  withState,\n  pure,\n  withHandlers,\n} from 'recompose';\nimport PropTypes from 'prop-types';\n\nimport './styles.css';\n\nconst TodoAddForm = ({\n  label,\n  setLabel,\n  onSubmit,\n}) => (\n  <form onSubmit={onSubmit} className=\"item-add-form input-group d-flex\">\n    <input\n      className=\"form-control\"\n      type=\"text\"\n      onChange={e => setLabel(e.target.value)}\n      placeholder=\"What needs to be done?\"\n      value={label}\n    />\n    <button type=\"submit\" className=\"btn btn-outline-secondary ml-1\">\n      Add Todo\n    </button>\n  </form>\n);\n\nTodoAddForm.propTypes = {\n  label: PropTypes.string.isRequired,\n  setLabel: PropTypes.func.isRequired,\n  onSubmit: PropTypes.func.isRequired,\n};\n\nexport default compose(\n  pure,\n  withState('label', 'setLabel', ''),\n  withHandlers({\n    onSubmit: ({\n      onCreateTodo,\n      label,\n      setLabel,\n    }) => (event) => {\n      event.preventDefault();\n      onCreateTodo(label);\n      setLabel('');\n    },\n  }),\n)(TodoAddForm);\n","import React from 'react';\nimport { connect } from 'react-redux';\nimport PropTypes from 'prop-types';\nimport {\n  compose,\n  withState,\n  setDisplayName,\n  withHandlers,\n} from 'recompose';\n\nimport Header from 'components/Header';\n\nimport TodoList from 'containers/blocks/TodoList';\nimport SearchPanel from 'containers/blocks/SearchPanel';\nimport TodoStatusFilter from 'containers/blocks/TodoStatusFilter';\nimport TodoAddFrom from 'containers/forms/TodoAddForm';\n\nimport { addTodo } from 'redux/data/todoList';\n\nimport './styles.css';\n\nconst App = ({\n  text,\n  todoList,\n  onAddTodoAction,\n  setText,\n  filter,\n  setFilter,\n  onSearchTodos,\n  onFilter,\n}) => {\n  const doneCount = todoList.filter(todo => todo.done).length;\n  const todoCount = todoList.length - doneCount;\n  const visibleTodos = onFilter(onSearchTodos(todoList, text), filter);\n\n  return (\n    <div className=\"root\">\n      <Header toDo={todoCount} done={doneCount} />\n      <nav className=\"navbar navbar-light bg-light mb-3\">\n        <div className=\"navbar-brand\">\n          <SearchPanel onSearchTodos={text => setText(text)} />\n        </div>\n        <div className=\"navbar-item\">\n          <TodoStatusFilter\n            filter={filter}\n            onFilterChange={filter => setFilter(filter)}\n          />\n        </div>\n      </nav>\n      <TodoList items={visibleTodos} />\n      <TodoAddFrom onCreateTodo={label => onAddTodoAction(label)} />\n    </div>\n  );\n};\n\nApp.propTypes = {\n  text: PropTypes.string.isRequired,\n  todoList: PropTypes.arrayOf(PropTypes.object).isRequired,\n  onAddTodoAction: PropTypes.func.isRequired,\n  setText: PropTypes.func.isRequired,\n  filter: PropTypes.string.isRequired,\n  setFilter: PropTypes.func.isRequired,\n  onSearchTodos: PropTypes.func.isRequired,\n  onFilter: PropTypes.func.isRequired,\n};\n\nexport default compose(\n  setDisplayName('App'),\n  connect(\n    ({ data: { todoList } }) => ({ todoList }),\n    {\n      onAddTodoAction: text => addTodo(text),\n    },\n  ),\n  withState('text', 'setText', ''),\n  withState('filter', 'setFilter', 'all'),\n  withHandlers({\n    onSearchTodos: () => (array, text) => {\n      if (text.length === 0) return array;\n      return array.filter(item => item.label.toLowerCase()\n        .indexOf(text) > -1);\n    },\n    onFilter: () => (array, filter) => {\n      switch (filter) {\n        case 'all':\n          return array;\n        case 'active':\n          return array.filter(item => !item.done);\n        case 'done':\n          return array.filter(item => item.done);\n        default:\n          return array;\n      }\n    },\n  }),\n)(App);\n","import { combineReducers } from 'redux';\n\nimport todoList from './todoList';\n\nexport default combineReducers({\n  todoList,\n});\n","import { combineReducers } from 'redux';\nimport data from './data';\n\nconst rootReducer = combineReducers({\n  data,\n});\n\nexport default rootReducer;\n","import { createStore, applyMiddleware } from 'redux';\nimport thunk from 'redux-thunk';\nimport { persistStore, persistReducer } from 'redux-persist';\nimport storage from 'redux-persist/lib/storage';\nimport autoMergeLevel2 from 'redux-persist/lib/stateReconciler/autoMergeLevel2';\n\nimport rootReducer from '../redux';\n\nconst persistConfig = {\n  key: 'root',\n  storage,\n  stateReconciler: autoMergeLevel2,\n  blacklist: ['todoList'],\n};\n\nconst pReducer = persistReducer(persistConfig, rootReducer);\n\nexport const store = createStore(\n  pReducer,\n  applyMiddleware(thunk),\n);\n\nexport const persistor = persistStore(store);\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { Provider } from 'react-redux';\n\nimport App from 'containers/layouts/App';\nimport { PersistGate } from 'redux-persist/lib/integration/react';\nimport { persistor, store } from './store';\n\nReactDOM.render(\n  <Provider store={store}>\n    <PersistGate loading={<span>Loading...</span>} persistor={persistor}>\n      <App />\n    </PersistGate>\n  </Provider>,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}